version: "3.8"

services:
  # ====================================
  # Database PostgreSQL
  # ====================================
  postgres:
    image: postgres:15-alpine
    container_name: pavillon-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: pavillon_les_lys
      POSTGRES_USER: pavillon_user
      POSTGRES_PASSWORD: "Str0ngLysP@ssword="
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432" # host:container
    networks:
      - pavillon-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pavillon_user -d pavillon_les_lys"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ====================================
  # Redis pour le cache et les sessions
  # ====================================
  redis:
    image: redis:7-alpine
    container_name: pavillon-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_pwd_2025
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - pavillon-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ====================================
  # API Application - Image du Hub
  # ====================================
  api:
    image: kysaymeric/pavillon-les-lys:${IMAGE_TAG:-latest}
    container_name: pavillon-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # ⚠️ Si ton mot de passe Postgres contient des caractères spéciaux (@, =),
      # utilise une URL ENCODÉE, ex: %40 pour @, %3D pour =
      # Exemple encodé: Str0ngLysP%40ssword%3D
      DATABASE_URL: "postgresql://pavillon_user:Str0ngLysP%40ssword%3D@postgres:5432/pavillon_les_lys"
      REDIS_URL: "redis://:redis_pwd_2025@redis:6379"
      JWT_SECRET: supersecretjwtkey_change_me
      JWT_EXPIRES_IN: 24h
      NODE_ENV: production
      PORT: 3000
      SMTP_HOST: smtp.example.com
      SMTP_PORT: 587
      SMTP_USER: smtp_user
      SMTP_PASS: smtp_password
      FROM_EMAIL: noreply@pavillon-les-lys.fr
    ports:
      - "3000:3000"
    networks:
      - pavillon-network
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:

networks:
  pavillon-network:
    driver: bridge
